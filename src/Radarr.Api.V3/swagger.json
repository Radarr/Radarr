{
  "openapi": "3.0.0",
  "info": {
    "title": "Radarr",
    "version": "3.0.0"
  },
  "servers": [
    {
      "url": "{protocol}://{hostPath}/api/v3",
      "variables": {
        "protocol": {
          "enum": [
            "https",
            "http"
          ],
          "default": "https"
        },
        "hostPath": {
          "default": "localhost:7878",
          "description": "Your Radarr Server URL"
        }
      }
    }
  ],
  "paths": {
    "/movie": {
      "get": {
        "tags": [
          "Movie"
        ],
        "summary": "Get all movies",
        "description": "Returns all movies stored in the database",
        "operationId": "getMovie",
        "parameters": [
          {
            "in": "query",
            "name": "tmdbId",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "TmdbId of the Movie to get"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Movie"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Movie not found"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "tags": [
          "Movie"
        ],
        "summary": "Add new movie",
        "requestBody": {
          "description": "Movie object that needs to be added",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Movie"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "put": {
        "tags": [
          "Movie"
        ],
        "summary": "Edit existing movie",
        "requestBody": {
          "description": "Movie object that needs to be edited",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Movie"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "movieFiles",
            "schema": {
              "type": "boolean"
            },
            "required": false,
            "description": "Have radarr movie files when updating"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Movie"
                }
              }
            }
          },
          "404": {
            "description": "Movie not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/movie/{id}": {
      "get": {
        "tags": [
          "Movie"
        ],
        "summary": "Get movie by database id",
        "description": "Returns a single movie",
        "operationId": "getMovieById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Database Id of movie to return",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Movie"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Movie not found"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Movie"
        ],
        "summary": "Delete movie",
        "description": "",
        "operationId": "deleteMovie",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Database Id of movie to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "addImportExclusion",
            "in": "query",
            "description": "Add deleted movies to List Exclusions",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "deleteFiles",
            "in": "query",
            "description": "Delete movie files when deleting movies",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Movie not found"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/tag/detail/{id}": {
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "Return usage details for a given tag id",
        "description": "Returns the id of all items in the database which use the specified tag",
        "operationId": "",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Database id of tag",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ]
    },
    "/tag/detail": {
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "Return usage details for all tags in database",
        "description": "Returns a list of tag detail objects for all tags in the database.",
        "operationId": "",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TagDetail"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "parameters": []
    },
    "/tag/{id}": {
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "Get tag by database id",
        "description": "Return a given tag and its label by the database id.",
        "operationId": "",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Tag"
        ],
        "summary": "Delete tag by database id",
        "description": "Delete a tag.",
        "operationId": "",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "ID of tag",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ]
    },
    "/tag": {
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "Get all tags",
        "description": "Get all tags in the database.",
        "operationId": "",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tag"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "put": {
        "tags": [
          "Tag"
        ],
        "summary": "Update tag",
        "description": "Update a tags label.",
        "operationId": "",
        "requestBody": {
          "description": "Tag object that needs to be updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "tags": [
          "Tag"
        ],
        "summary": "Create a new tag",
        "description": "Create a new tag that can be assigned to a movie, list, delay profile, notification, or restriction",
        "operationId": "",
        "requestBody": {
          "description": "Tag object that needs to be added",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "parameters": []
    }
  },
  "components": {
    "schemas": {
      "Movie": {
        "type": "object",
        "required": [
          "title"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string",
            "example": "Dark Phoenix"
          },
          "sortTitle": {
            "type": "string",
            "example": "dark phoenix"
          },
          "sizeOnDisk": {
            "type": "number"
          },
          "overview": {
            "type": "string"
          },
          "inCinemas": {
            "type": "string"
          },
          "physicalRelease": {
            "type": "string"
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Image"
            }
          },
          "website": {
            "type": "string",
            "example": "http://darkphoenix.com"
          },
          "year": {
            "type": "integer"
          },
          "hasFile": {
            "type": "boolean"
          },
          "youTubeTrailerId": {
            "type": "string"
          },
          "studio": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "qualityProfileId": {
            "type": "integer"
          },
          "monitored": {
            "type": "boolean"
          },
          "minimumAcailability": {
            "type": "string",
            "enum": [
              "announced",
              "inCinema",
              "released"
            ]
          },
          "isAvailable": {
            "type": "boolean"
          },
          "folderName": {
            "type": "string"
          },
          "runtime": {
            "type": "integer"
          },
          "cleanTitle": {
            "type": "string"
          },
          "imdbId": {
            "type": "string"
          },
          "tmdbId": {
            "type": "integer"
          },
          "titleSlug": {
            "type": "integer"
          },
          "certification": {
            "type": "string"
          },
          "genres": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "added": {
            "type": "string"
          },
          "ratings": {
            "$ref": "#/components/schemas/Rating"
          },
          "collection": {
            "$ref": "#/components/schemas/Collection"
          },
          "status": {
            "type": "string",
            "description": "movie status",
            "enum": [
              "deleted",
              "tba",
              "announced",
              "inCinema",
              "released"
            ]
          }
        },
        "xml": {
          "name": "Movie"
        }
      },
      "Image": {
        "type": "object",
        "properties": {
          "coverType": {
            "type": "string",
            "enum": [
              "poster",
              "fanart"
            ]
          },
          "url": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Image"
        }
      },
      "Collection": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "tmdbId": {
            "type": "integer"
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Image"
            }
          }
        },
        "xml": {
          "name": "Collection"
        }
      },
      "Rating": {
        "type": "object",
        "properties": {
          "votes": {
            "type": "integer"
          },
          "value": {
            "type": "integer"
          }
        },
        "xml": {
          "name": "Rating"
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "label": {
            "type": "string"
          }
        }
      },
      "TagDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "label": {
            "type": "string"
          },
          "delayProfileIds": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "notificationIds": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "restrictionIds": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "netImportIds": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "movieIds": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "in": "query",
        "name": "apiKey"
      }
    }
  }
}